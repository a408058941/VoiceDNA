apply plugin: 'com.android.application'
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
def config = rootProject.ext.ver
static def buildTime() {
    return new Date().format("yyyyMMdd");
}
android {
    signingConfigs {
        release {
            storeFile file(rootProject.ext.keystorePath)
            storePassword rootProject.ext.keystorePassword
            keyAlias rootProject.ext.alias
            keyPassword rootProject.ext.aliasPassword
        }
    }

    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId "com.voice.dna"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        //打包时间
        resValue "string", "build_time", buildTime()
        manifestPlaceholders = [qqappid: "1111287969"]
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","x86_64"
        }
        multiDexEnabled true
    }
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            //是否zip对齐
            zipAlignEnabled true
            // 缩减resource文件
            shrinkResources false
            //Proguard
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
//            signingConfig signingConfigs.release
        }

        debug {
//            给applicationId添加后缀“.debug”
//            manifestPlaceholders = [app_icon: "@drawable/launch_beta"]
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
            debuggable true
        }
    }
}

dependencies {
    implementation deps.support.multidex
    if (!isModule.toBoolean()) {
        implementation project(':module_main')
    }
    implementation project(':baselibrary')
//    implementation files('libs\\classes.jar')
}
